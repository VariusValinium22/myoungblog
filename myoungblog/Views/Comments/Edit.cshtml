@model myoungblog.Models.Comment

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Comments", FormMethod.Post))
{

	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Comment</h4>
		<hr />

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.BloggyId, "BloggyId", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("BloggyId", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.BloggyId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.UpdatedReason, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.UpdatedReason, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.UpdatedReason, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/tinymce/tinymce.min.js"></script>
	<script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
	<script type="text/javascript">

		$(function () {
			tinymce.init({
				selector: '#editor'
			});
		});
	</script>
}



